# ИНСТРУКЦИЯ ДЛЯ КОПИРОВАНИЯ ЧЕРЕЗ GITHUB ВЕБ-ИНТЕРФЕЙС

## Шаг 1: Подготовка
1. Зайдите на https://github.com/Modprobe1/gift-card-shop
2. Нажмите на вкладку "Code"
3. Удалите все старые файлы

## Шаг 2: Создание файлов
Для каждого файла ниже:
1. Нажмите "Add file" → "Create new file"
2. В поле имени файла введите путь (например: backend/main.go)
3. Скопируйте содержимое
4. Нажмите "Commit new file"

## ФАЙЛЫ ДЛЯ СОЗДАНИЯ:

### ==> .gitignore
```
# Backend
backend/auth-backend
backend/*.exe
backend/.env

# Frontend
frontend/node_modules/
frontend/build/

# OS
.DS_Store
```

### ==> README.md
Скопируйте из файла выше

### ==> docker-compose.yml
Скопируйте из файла выше

### ==> backend/go.mod
```
module auth-backend

go 1.20

require (
	github.com/gin-gonic/gin v1.10.1
	github.com/golang-jwt/jwt/v4 v4.5.2
	github.com/joho/godotenv v1.5.1
	go.mongodb.org/mongo-driver v1.17.4
	golang.org/x/crypto v0.39.0
)
```

### ==> backend/.env.example
```
MONGODB_URI=mongodb://localhost:27017
JWT_SECRET=your-super-secret-jwt-key-change-this
PORT=8080
```

### ==> backend/main.go
Путь: backend/main.go
```go
package main

import (
	"log"
	"os"

	"auth-backend/config"
	"auth-backend/controllers"
	"auth-backend/middleware"

	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
)

func main() {
	// Load .env file
	if err := godotenv.Load(); err != nil {
		log.Println("No .env file found")
	}

	// Connect to MongoDB
	config.ConnectDB()

	// Initialize Gin router
	router := gin.Default()

	// Apply CORS middleware
	router.Use(middleware.CORSMiddleware())

	// Public routes
	api := router.Group("/api")
	{
		api.POST("/register", controllers.Register)
		api.POST("/login", controllers.Login)
	}

	// Protected routes
	protected := api.Group("/")
	protected.Use(middleware.AuthRequired())
	{
		protected.GET("/profile", controllers.GetProfile)
	}

	// Get port from environment or use default
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	log.Printf("Server starting on port %s", port)
	if err := router.Run(":" + port); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}
```

Далее создайте остальные backend файлы...